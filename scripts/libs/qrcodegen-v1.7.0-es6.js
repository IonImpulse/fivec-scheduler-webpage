"use strict";var qrcodegen;!function(t){class e{constructor(t,s,r,o){if(this.version=t,this.errorCorrectionLevel=s,this.mask=o,this.modules=[],this.isFunction=[],t<e.MIN_VERSION||t>e.MAX_VERSION)throw"Version value out of range";if(o<-1||o>7)throw"Mask value out of range";this.size=4*t+17;let i=[];for(let t=0;t<this.size;t++)i.push(!1);for(let t=0;t<this.size;t++)this.modules.push(i.slice()),this.isFunction.push(i.slice());this.drawFunctionPatterns();const n=this.addEccAndInterleave(r);if(this.drawCodewords(n),-1==o){let t=1e9;for(let e=0;e<8;e++){this.applyMask(e),this.drawFormatBits(e);const s=this.getPenaltyScore();s<t&&(o=e,t=s),this.applyMask(e)}}if(o<0||o>7)throw"Assertion error";this.mask=o,this.applyMask(o),this.drawFormatBits(o),this.isFunction=[]}static encodeText(s,r){const o=t.QrSegment.makeSegments(s);return e.encodeSegments(o,r)}static encodeBinary(s,r){const o=t.QrSegment.makeBytes(s);return e.encodeSegments([o],r)}static encodeSegments(t,r,i=1,n=40,a=-1,h=!0){if(!(e.MIN_VERSION<=i&&i<=n&&n<=e.MAX_VERSION)||a<-1||a>7)throw"Invalid value";let l,u;for(l=i;;l++){const s=8*e.getNumDataCodewords(l,r),i=o.getTotalBits(t,l);if(i<=s){u=i;break}if(l>=n)throw"Data too long"}for(const t of[e.Ecc.MEDIUM,e.Ecc.QUARTILE,e.Ecc.HIGH])h&&u<=8*e.getNumDataCodewords(l,t)&&(r=t);let c=[];for(const e of t){s(e.mode.modeBits,4,c),s(e.numChars,e.mode.numCharCountBits(l),c);for(const t of e.getData())c.push(t)}if(c.length!=u)throw"Assertion error";const d=8*e.getNumDataCodewords(l,r);if(c.length>d)throw"Assertion error";if(s(0,Math.min(4,d-c.length),c),s(0,(8-c.length%8)%8,c),c.length%8!=0)throw"Assertion error";for(let t=236;c.length<d;t^=253)s(t,8,c);let f=[];for(;8*f.length<c.length;)f.push(0);return c.forEach((t,e)=>f[e>>>3]|=t<<7-(7&e)),new e(l,r,f,a)}getModule(t,e){return 0<=t&&t<this.size&&0<=e&&e<this.size&&this.modules[e][t]}drawFunctionPatterns(){for(let t=0;t<this.size;t++)this.setFunctionModule(6,t,t%2==0),this.setFunctionModule(t,6,t%2==0);this.drawFinderPattern(3,3),this.drawFinderPattern(this.size-4,3),this.drawFinderPattern(3,this.size-4);const t=this.getAlignmentPatternPositions(),e=t.length;for(let s=0;s<e;s++)for(let r=0;r<e;r++)0==s&&0==r||0==s&&r==e-1||s==e-1&&0==r||this.drawAlignmentPattern(t[s],t[r]);this.drawFormatBits(0),this.drawVersion()}drawFormatBits(t){const e=this.errorCorrectionLevel.formatBits<<3|t;let s=e;for(let t=0;t<10;t++)s=s<<1^1335*(s>>>9);const o=21522^(e<<10|s);if(o>>>15!=0)throw"Assertion error";for(let t=0;t<=5;t++)this.setFunctionModule(8,t,r(o,t));this.setFunctionModule(8,7,r(o,6)),this.setFunctionModule(8,8,r(o,7)),this.setFunctionModule(7,8,r(o,8));for(let t=9;t<15;t++)this.setFunctionModule(14-t,8,r(o,t));for(let t=0;t<8;t++)this.setFunctionModule(this.size-1-t,8,r(o,t));for(let t=8;t<15;t++)this.setFunctionModule(8,this.size-15+t,r(o,t));this.setFunctionModule(8,this.size-8,!0)}drawVersion(){if(this.version<7)return;let t=this.version;for(let e=0;e<12;e++)t=t<<1^7973*(t>>>11);const e=this.version<<12|t;if(e>>>18!=0)throw"Assertion error";for(let t=0;t<18;t++){const s=r(e,t),o=this.size-11+t%3,i=Math.floor(t/3);this.setFunctionModule(o,i,s),this.setFunctionModule(i,o,s)}}drawFinderPattern(t,e){for(let s=-4;s<=4;s++)for(let r=-4;r<=4;r++){const o=Math.max(Math.abs(r),Math.abs(s)),i=t+r,n=e+s;0<=i&&i<this.size&&0<=n&&n<this.size&&this.setFunctionModule(i,n,2!=o&&4!=o)}}drawAlignmentPattern(t,e){for(let s=-2;s<=2;s++)for(let r=-2;r<=2;r++)this.setFunctionModule(t+r,e+s,1!=Math.max(Math.abs(r),Math.abs(s)))}setFunctionModule(t,e,s){this.modules[e][t]=s,this.isFunction[e][t]=!0}addEccAndInterleave(t){const s=this.version,r=this.errorCorrectionLevel;if(t.length!=e.getNumDataCodewords(s,r))throw"Invalid argument";const o=e.NUM_ERROR_CORRECTION_BLOCKS[r.ordinal][s],i=e.ECC_CODEWORDS_PER_BLOCK[r.ordinal][s],n=Math.floor(e.getNumRawDataModules(s)/8),a=o-n%o,h=Math.floor(n/o);let l=[];const u=e.reedSolomonComputeDivisor(i);for(let s=0,r=0;s<o;s++){let o=t.slice(r,r+h-i+(s<a?0:1));r+=o.length;const n=e.reedSolomonComputeRemainder(o,u);s<a&&o.push(0),l.push(o.concat(n))}let c=[];for(let t=0;t<l[0].length;t++)l.forEach((e,s)=>{(t!=h-i||s>=a)&&c.push(e[t])});if(c.length!=n)throw"Assertion error";return c}drawCodewords(t){if(t.length!=Math.floor(e.getNumRawDataModules(this.version)/8))throw"Invalid argument";let s=0;for(let e=this.size-1;e>=1;e-=2){6==e&&(e=5);for(let o=0;o<this.size;o++)for(let i=0;i<2;i++){const n=e-i,a=0==(e+1&2)?this.size-1-o:o;!this.isFunction[a][n]&&s<8*t.length&&(this.modules[a][n]=r(t[s>>>3],7-(7&s)),s++)}}if(s!=8*t.length)throw"Assertion error"}applyMask(t){if(t<0||t>7)throw"Mask value out of range";for(let e=0;e<this.size;e++)for(let s=0;s<this.size;s++){let r;switch(t){case 0:r=(s+e)%2==0;break;case 1:r=e%2==0;break;case 2:r=s%3==0;break;case 3:r=(s+e)%3==0;break;case 4:r=(Math.floor(s/3)+Math.floor(e/2))%2==0;break;case 5:r=s*e%2+s*e%3==0;break;case 6:r=(s*e%2+s*e%3)%2==0;break;case 7:r=((s+e)%2+s*e%3)%2==0;break;default:throw"Assertion error"}!this.isFunction[e][s]&&r&&(this.modules[e][s]=!this.modules[e][s])}}getPenaltyScore(){let t=0;for(let s=0;s<this.size;s++){let r=!1,o=0,i=[0,0,0,0,0,0,0];for(let n=0;n<this.size;n++)this.modules[s][n]==r?5==++o?t+=e.PENALTY_N1:o>5&&t++:(this.finderPenaltyAddHistory(o,i),r||(t+=this.finderPenaltyCountPatterns(i)*e.PENALTY_N3),r=this.modules[s][n],o=1);t+=this.finderPenaltyTerminateAndCount(r,o,i)*e.PENALTY_N3}for(let s=0;s<this.size;s++){let r=!1,o=0,i=[0,0,0,0,0,0,0];for(let n=0;n<this.size;n++)this.modules[n][s]==r?5==++o?t+=e.PENALTY_N1:o>5&&t++:(this.finderPenaltyAddHistory(o,i),r||(t+=this.finderPenaltyCountPatterns(i)*e.PENALTY_N3),r=this.modules[n][s],o=1);t+=this.finderPenaltyTerminateAndCount(r,o,i)*e.PENALTY_N3}for(let s=0;s<this.size-1;s++)for(let r=0;r<this.size-1;r++){const o=this.modules[s][r];o==this.modules[s][r+1]&&o==this.modules[s+1][r]&&o==this.modules[s+1][r+1]&&(t+=e.PENALTY_N2)}let s=0;for(const t of this.modules)s=t.reduce((t,e)=>t+(e?1:0),s);const r=this.size*this.size;return t+=(Math.ceil(Math.abs(20*s-10*r)/r)-1)*e.PENALTY_N4}getAlignmentPatternPositions(){if(1==this.version)return[];{const t=Math.floor(this.version/7)+2,e=32==this.version?26:2*Math.ceil((4*this.version+4)/(2*t-2));let s=[6];for(let r=this.size-7;s.length<t;r-=e)s.splice(1,0,r);return s}}static getNumRawDataModules(t){if(t<e.MIN_VERSION||t>e.MAX_VERSION)throw"Version number out of range";let s=(16*t+128)*t+64;if(t>=2){const e=Math.floor(t/7)+2;s-=(25*e-10)*e-55,t>=7&&(s-=36)}if(!(208<=s&&s<=29648))throw"Assertion error";return s}static getNumDataCodewords(t,s){return Math.floor(e.getNumRawDataModules(t)/8)-e.ECC_CODEWORDS_PER_BLOCK[s.ordinal][t]*e.NUM_ERROR_CORRECTION_BLOCKS[s.ordinal][t]}static reedSolomonComputeDivisor(t){if(t<1||t>255)throw"Degree out of range";let s=[];for(let e=0;e<t-1;e++)s.push(0);s.push(1);let r=1;for(let o=0;o<t;o++){for(let t=0;t<s.length;t++)s[t]=e.reedSolomonMultiply(s[t],r),t+1<s.length&&(s[t]^=s[t+1]);r=e.reedSolomonMultiply(r,2)}return s}static reedSolomonComputeRemainder(t,s){let r=s.map(t=>0);for(const o of t){const t=o^r.shift();r.push(0),s.forEach((s,o)=>r[o]^=e.reedSolomonMultiply(s,t))}return r}static reedSolomonMultiply(t,e){if(t>>>8!=0||e>>>8!=0)throw"Byte out of range";let s=0;for(let r=7;r>=0;r--)s=s<<1^285*(s>>>7),s^=(e>>>r&1)*t;if(s>>>8!=0)throw"Assertion error";return s}finderPenaltyCountPatterns(t){const e=t[1];if(e>3*this.size)throw"Assertion error";const s=e>0&&t[2]==e&&t[3]==3*e&&t[4]==e&&t[5]==e;return(s&&t[0]>=4*e&&t[6]>=e?1:0)+(s&&t[6]>=4*e&&t[0]>=e?1:0)}finderPenaltyTerminateAndCount(t,e,s){return t&&(this.finderPenaltyAddHistory(e,s),e=0),e+=this.size,this.finderPenaltyAddHistory(e,s),this.finderPenaltyCountPatterns(s)}finderPenaltyAddHistory(t,e){0==e[0]&&(t+=this.size),e.pop(),e.unshift(t)}}function s(t,e,s){if(e<0||e>31||t>>>e!=0)throw"Value out of range";for(let r=e-1;r>=0;r--)s.push(t>>>r&1)}function r(t,e){return 0!=(t>>>e&1)}e.MIN_VERSION=1,e.MAX_VERSION=40,e.PENALTY_N1=3,e.PENALTY_N2=3,e.PENALTY_N3=40,e.PENALTY_N4=10,e.ECC_CODEWORDS_PER_BLOCK=[[-1,7,10,15,20,26,18,20,24,30,18,20,24,26,30,22,24,28,30,28,28,28,28,30,30,26,28,30,30,30,30,30,30,30,30,30,30,30,30,30,30],[-1,10,16,26,18,24,16,18,22,22,26,30,22,22,24,24,28,28,26,26,26,26,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28],[-1,13,22,18,26,18,24,18,22,20,24,28,26,24,20,30,24,28,28,26,30,28,30,30,30,30,28,30,30,30,30,30,30,30,30,30,30,30,30,30,30],[-1,17,28,22,16,22,28,26,26,24,28,24,28,22,24,24,30,28,28,26,28,30,24,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30]],e.NUM_ERROR_CORRECTION_BLOCKS=[[-1,1,1,1,1,1,2,2,2,2,4,4,4,4,4,6,6,6,6,7,8,8,9,9,10,12,12,12,13,14,15,16,17,18,19,19,20,21,22,24,25],[-1,1,1,1,2,2,4,4,4,5,5,5,8,9,9,10,10,11,13,14,16,17,17,18,20,21,23,25,26,28,29,31,33,35,37,38,40,43,45,47,49],[-1,1,1,2,2,4,4,6,6,8,8,8,10,12,16,12,17,16,18,21,20,23,23,25,27,29,34,34,35,38,40,43,45,48,51,53,56,59,62,65,68],[-1,1,1,2,4,4,4,5,6,8,8,11,11,16,16,18,16,19,21,25,25,25,34,30,32,35,37,40,42,45,48,51,54,57,60,63,66,70,74,77,81]],t.QrCode=e;class o{constructor(t,e,s){if(this.mode=t,this.numChars=e,this.bitData=s,e<0)throw"Invalid argument";this.bitData=s.slice()}static makeBytes(t){let e=[];for(const r of t)s(r,8,e);return new o(o.Mode.BYTE,t.length,e)}static makeNumeric(t){if(!o.isNumeric(t))throw"String contains non-numeric characters";let e=[];for(let r=0;r<t.length;){const o=Math.min(t.length-r,3);s(parseInt(t.substr(r,o),10),3*o+1,e),r+=o}return new o(o.Mode.NUMERIC,t.length,e)}static makeAlphanumeric(t){if(!o.isAlphanumeric(t))throw"String contains unencodable characters in alphanumeric mode";let e,r=[];for(e=0;e+2<=t.length;e+=2){let i=45*o.ALPHANUMERIC_CHARSET.indexOf(t.charAt(e));s(i+=o.ALPHANUMERIC_CHARSET.indexOf(t.charAt(e+1)),11,r)}return e<t.length&&s(o.ALPHANUMERIC_CHARSET.indexOf(t.charAt(e)),6,r),new o(o.Mode.ALPHANUMERIC,t.length,r)}static makeSegments(t){return""==t?[]:o.isNumeric(t)?[o.makeNumeric(t)]:o.isAlphanumeric(t)?[o.makeAlphanumeric(t)]:[o.makeBytes(o.toUtf8ByteArray(t))]}static makeEci(t){let e=[];if(t<0)throw"ECI assignment value out of range";if(t<128)s(t,8,e);else if(t<16384)s(2,2,e),s(t,14,e);else{if(!(t<1e6))throw"ECI assignment value out of range";s(6,3,e),s(t,21,e)}return new o(o.Mode.ECI,0,e)}static isNumeric(t){return o.NUMERIC_REGEX.test(t)}static isAlphanumeric(t){return o.ALPHANUMERIC_REGEX.test(t)}getData(){return this.bitData.slice()}static getTotalBits(t,e){let s=0;for(const r of t){const t=r.mode.numCharCountBits(e);if(r.numChars>=1<<t)return 1/0;s+=4+t+r.bitData.length}return s}static toUtf8ByteArray(t){t=encodeURI(t);let e=[];for(let s=0;s<t.length;s++)"%"!=t.charAt(s)?e.push(t.charCodeAt(s)):(e.push(parseInt(t.substr(s+1,2),16)),s+=2);return e}}o.NUMERIC_REGEX=/^[0-9]*$/,o.ALPHANUMERIC_REGEX=/^[A-Z0-9 $%*+.\/:-]*$/,o.ALPHANUMERIC_CHARSET="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ $%*+-./:",t.QrSegment=o}(qrcodegen||(qrcodegen={})),function(t){!function(t){class e{constructor(t,e){this.ordinal=t,this.formatBits=e}}e.LOW=new e(0,1),e.MEDIUM=new e(1,0),e.QUARTILE=new e(2,3),e.HIGH=new e(3,2),t.Ecc=e}(t.QrCode||(t.QrCode={}))}(qrcodegen||(qrcodegen={})),function(t){!function(t){class e{constructor(t,e){this.modeBits=t,this.numBitsCharCount=e}numCharCountBits(t){return this.numBitsCharCount[Math.floor((t+7)/17)]}}e.NUMERIC=new e(1,[10,12,14]),e.ALPHANUMERIC=new e(2,[9,11,13]),e.BYTE=new e(4,[8,16,16]),e.KANJI=new e(8,[8,10,12]),e.ECI=new e(7,[0,0,0]),t.Mode=e}(t.QrSegment||(t.QrSegment={}))}(qrcodegen||(qrcodegen={}));